I will need a loop. Maybe a variable to keep track of the current state of the game. If the user enters a string like "exit" the game loop will exit, and the program will finish.

There will be two players, one will be assigned the symbol "x", and another "o". The players will select cells by inputing the number of the cell. The number of the cell can be drawn in a corner of the cell, and if the cell is selected, by say "x", the selected symbol will be drawn on the middle.

From an user's perspective we have two players. When the game starts we will first ask who will play first, "x" or "o". If the user enters anything other than ["x", "X", "o", "O"] we will keep asking until they enter what we want.

After the user has entered who the first player will be, the game loop will start. We will print the game board like this
     |     |
     |     |
    0|    1|    2
-----.-----.-----
     |     |
     |     |
    3|    4|    5
-----.-----.-----
     |     |    
     |     |
    6|    7|    8
Then we will ask the current user which cell they want to play in. If they enter an already selected cell, an invalid string, or a number outside of the valid range, we will show an error and prompthem again. Say the first user is x, and they select 1. Then we will update the state of the game, and print it, then will ask the other player for their choice, so in this case the board would look like this
     |     |
     |  x  |
    0|    1|    2
-----.-----.-----
     |     |
     |     |
    3|    4|    5
-----.-----.-----
     |     |    
     |     |
    6|    7|    8
This will continue until there are no more cells, or until someone wins. Once the game is over we will announce the player, and ask them if they want to play again.

What do we need to keep track of for this? We need to know if we are still playing. There will be an outer most loop, the game loop, that will keep track of everything. While the `isPlaying` variable is true, the loop will continue to run.

We will have two variables; playerOne, and playerTwo. When the game starts we ask the user to set playerOne to either "x" or "o". We will keep on asking for a valid choice unless they enter such. They can also enter the string "exit", which will end the game.

Once we have a valid starting player we will start the main game loop. In the loop we will first print the current state of the board, and then ask the current player to choose a cell to play in. The player is expected to enter a number in [0, 8]. We'll check if the entered value is a number and if it's empty. If the value is out of range, or the cell is already taken, we will ask the player to enter a different one. Once we have a valid cell, we'll update the state of the game with it, and check if any of the players has won, or if there are no more empty cells. If any of those conditions are true, we will announce this, and ask the user if they want to play again.

How do we check if a player has won? Since the state of the game is an array of strings, and there is a limited number of combinations for a win, we can check them all. If cells [0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], or [2, 4 ,6] are equal, then this player has won. What I want to avoid here is having to do the check twice, once for each player. I would also like to avoid having to check each combination manually, so no `if state[0] == state[1] && state[1] == state[2] return state[0]`. I can make an array with the winning combinations like so

 winning = [
	[0, 1, 2],
	[3, 4, 5],
	[6, 7, 8],
	[0, 3, 6],
	[1, 4, 7],
	[2, 5, 8],
	[0, 4, 8],
	[2, 4, 6]
 ]

If there's a combination in `winning` such that all elements of `state` in those indices are the same, return the value of `state` in those indices. 
