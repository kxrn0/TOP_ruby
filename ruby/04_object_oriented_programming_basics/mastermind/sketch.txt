I'll use characters instead of colors. The characters will be [a, b, c, d, e, f, g, h, i], and [*, #, -] will be used to represent a correct guess, a correct character but wrong position guess, and an incorrect guess.

According to the description of the problem the task is to write the game in such a way that the player will be able to play against the computer, but the computer can also guess. 

I'll first write a simple version of the game where the computer generates a random string, and the player has to guess it in at most eight turns. Once I'm done with that I'll refactor it to make it so that the player can play it against another human, or the computer.

What will we need for the first case where the player guesses the computer's code?
I will need to keep track of some state. First of all is an `isPlaying` variable, that makes it so that the game continues while it is true. We will also need a variable to keep track of the secret string, and one for the number of lifes.

This is how it will work:

initialize the game state

while isPlaying is true
  if the number of lifes is zero
    tell the user they've ran out of lifes
    ask them if they want to play again
    
    if they want to play again
      reset the game state
    else
      set isPlaying to false
  
  ask the use for a guess
  
  if the guess is equal to the secret
    tell so to the user
    ask them if they want to play again

    if they want to play again
      reset the game state
    else
      set isPlaying to false
  else
    check how many correct guesses the user made
    decrease the number of lifes by one

Would there be any issue if the player's last guess is the correct one? Assume a player has two guesses. The first one is incorrect, so we decrease the count by one, and go back to the start of the loop. We still have one guess, if it's correct we win, otherwise we decrease the count by one. It looks like here such thing would not be a problem.

How do we inform the user of how many correct and incorrect guesses they made? We have a secret, for example s = "abcd", and a guess, for example g = "eacb". Given the rules above, we are expected to print "-#*#" at some point. I think this may be correct

for every character at index i in our guess
  if secret[i] == guess[i]
    print *
  else if secret.include? guess[i]
    print #
  else
    print -